#!/usr/bin/python

# Connects to all netconf-nodes in a network and collects operational data.
# If the topology does not have netconf-node:config collects and saves config data too.
# This tool takes a snapshot of the network state and saves it as a single XML file.
# Usage:
# get-net input-xml-file output-xml-file [filter]
# Example:
# get-net topology.xml network-snapshot.xml '<filter type="xpath" select="/"/>'

import lxml
from lxml import etree
import time
import sys, os
import argparse
import tntapi

namespaces={"nc":"urn:ietf:params:xml:ns:netconf:base:1.0",
	"nd":"urn:ietf:params:xml:ns:yang:ietf-network",
	"netconf-node":"urn:tntapi:netconf-node"}

def main():

	of = open(sys.argv[2], "w")
	tree=etree.parse(sys.argv[1])

	if len(sys.argv) > 3:
		filter=sys.argv[3]
	else:
		filter=""

	networks = tree.xpath('/nc:config/nd:networks',namespaces=namespaces)[0]
	network = networks.xpath('nd:network',namespaces=namespaces)[0]
	conns = tntapi.network_connect(network)

	assert(conns != None)

	network_w_state_data = tntapi.network_get_state(network, conns, filter=filter)
	network_w_all_data = tntapi.network_get_config(network_w_state_data, conns, filter=filter)
	networks.replace(network,network_w_all_data)
	of.write(lxml.etree.tostring(tree, xml_declaration=True, encoding=tree.docinfo.encoding))
	of.close()
	return 0

sys.exit(main())

